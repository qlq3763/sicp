(define (sqrt-iter guess x)
  (let ((next (improve guess x)))
  (if (good-enough? guess next)
      next
      (sqrt-iter next x))))

(define (improve guess x)
  (average guess (/ x guess)))

(define (average x y)
  (/ (+ x y) 2))

(define (good-enough? guess next)
  (define frac 0.001)
  (< (abs (- guess next)) (* frac guess)))

(define (sqrt x)
  (sqrt-iter 1.0 x))
